Army.rate.Daegu <- Army$Daegu / Army$total[3] * 100
Army.Duty.total <- c(sum(Army$Seoul[1:3]), sum(Army$Busan[1:3]), sum(Army$Daegu[1:3]))
names(Army.Duty.total) <- c('Seoul', 'Busan', 'Daegu')
names(max(Army.Duty.total))
# 2022년 자료 기준(서울, 부산 대구)
Army <- list(Seoul = c(183, 314, 603, 850, 159, 11, 231), Busan = c(39, 80, 194, 256, 47, 3, 79), Daegu = c(37, 90, 235, 312, 65, 7, 52), total = c(0, 0, 0), class = c('현역병입영 대상', '현역병입영 대상', '현역병입역 대상', '보충역', '전시근로역', '병역면제', '재신체검사') )
Army$class <- factor(Army$class)
names(Army$Seoul) <- Army$class # 지역별 인원에 처분기준에 따른 분류 부여 - 서울
names(Army$Busan) <- Army$class # 지역별 인원에 처분기준에 따른 분류 부여 - 부산
names(Army$Daegu) <- Army$class # 지역별 인원에 처분기준에 따른 분류 부여 - 대구
Army$total <- c(sum(Army$Seoul), sum(Army$Busan), sum(Army$Daegu)) # Army에 지역별 총 인원 추가가
Army.avg <- c(mean(Army$Seoul), mean(Army$Busan), mean(Army$Daegu)) # 각 지역별 평균
Army.rate.Seoul <- Army$Seoul / Army$total[1] * 100 # 각 처분기준에 따른 분류의 비율 - 서울
Army.rate.Busan <- Army$Busan / Army$total[2] * 100 # 각 처분기준에 따른 분류의 비율 - 부산
Army.rate.Daegu <- Army$Daegu / Army$total[3] * 100 # 각 처분기준에 따른 분류의 비율 - 대구
Army.Duty.total <- c(sum(Army$Seoul[1:3]), sum(Army$Busan[1:3]), sum(Army$Daegu[1:3]))
names(Army.Duty.total) <- c('Seoul', 'Busan', 'Daegu') # 지역별 현역병입영 대상자 합
names(Army.Duty.total[Army.Duty.total == max(Army.Duty.total)])
# 2022년 자료 기준(서울, 부산 대구)
Army <- list(Seoul = c(183, 314, 603, 850, 159, 11, 231), Busan = c(39, 80, 194, 256, 47, 3, 79), Daegu = c(37, 90, 235, 312, 65, 7, 52), total = c(0, 0, 0), class = c('현역병입영 대상', '현역병입영 대상', '현역병입역 대상', '보충역', '전시근로역', '병역면제', '재신체검사') )
Army$class <- factor(Army$class)
names(Army$Seoul) <- Army$class # 지역별 인원에 처분기준에 따른 분류 부여 - 서울
names(Army$Busan) <- Army$class # 지역별 인원에 처분기준에 따른 분류 부여 - 부산
names(Army$Daegu) <- Army$class # 지역별 인원에 처분기준에 따른 분류 부여 - 대구
Army$total <- c(sum(Army$Seoul), sum(Army$Busan), sum(Army$Daegu)) # Army에 지역별 총 인원 추가가
Army.avg <- c(mean(Army$Seoul), mean(Army$Busan), mean(Army$Daegu)) # 각 지역별 평균
Army.rate.Seoul <- Army$Seoul / Army$total[1] * 100 # 각 처분기준에 따른 분류의 비율 - 서울
Army.rate.Busan <- Army$Busan / Army$total[2] * 100 # 각 처분기준에 따른 분류의 비율 - 부산
Army.rate.Daegu <- Army$Daegu / Army$total[3] * 100 # 각 처분기준에 따른 분류의 비율 - 대구
names(Army.rate.Seoul[Army.rate.Seoul == max(Army.rate.Seoul)])
names(Army.rate.Busan[Army.rate.Busan == max(Army.rate.Busan)])
names(Army.rate.Daegu[Army.rate.Daegu == max(Army.rate.Daegu)])
Army.Duty.total <- c(sum(Army$Seoul[1:3]), sum(Army$Busan[1:3]), sum(Army$Daegu[1:3]))
names(Army.Duty.total) <- c('Seoul', 'Busan', 'Daegu') # 지역별 현역병입영 대상자 합
names(Army.Duty.total[Army.Duty.total == max(Army.Duty.total)]) # 현역병입영 대상자가 가장 많은 지역
# 2022년 자료 기준(서울, 부산 대구)
Army <- list(Seoul = c(183, 314, 603, 850, 159, 11, 231), Busan = c(39, 80, 194, 256, 47, 3, 79), Daegu = c(37, 90, 235, 312, 65, 7, 52), total = c(0, 0, 0), class = c('현역병입영 대상', '현역병입영 대상', '현역병입역 대상', '보충역', '전시근로역', '병역면제', '재신체검사') )
Army$class <- factor(Army$class)
names(Army$Seoul) <- Army$class # 지역별 인원에 처분기준에 따른 분류 부여 - 서울
names(Army$Busan) <- Army$class # 지역별 인원에 처분기준에 따른 분류 부여 - 부산
names(Army$Daegu) <- Army$class # 지역별 인원에 처분기준에 따른 분류 부여 - 대구
Army$total <- c(sum(Army$Seoul), sum(Army$Busan), sum(Army$Daegu)) # Army에 지역별 총 인원 추가가
Army.avg <- c(mean(Army$Seoul), mean(Army$Busan), mean(Army$Daegu)) # 각 지역별 평균
Army.rate.Seoul <- Army$Seoul / Army$total[1] * 100 # 각 처분기준에 따른 분류의 비율 - 서울
Army.rate.Busan <- Army$Busan / Army$total[2] * 100 # 각 처분기준에 따른 분류의 비율 - 부산
Army.rate.Daegu <- Army$Daegu / Army$total[3] * 100 # 각 처분기준에 따른 분류의 비율 - 대구
Army.rate <- c(Army.rate.Seoul, Army.rate.Busan, Army.rate.Daegu)
names(Army.rate) <- c('Seoul', 'Busan', 'Daegu')
names(Army.rate.Seoul[Army.rate[1] == max(Army.rate[1])]) # 지역별 가장 높은 처분기준 - 서울
names(Army.rate.Busan[Army.rate[2] == max(Army.rate[2])]) # 지역별 가장 높은 처분기준 - 부산
names(Army.rate.Daegu[Army.rate[3] == max(Army.rate[3])]) # 지역별 가장 높은 처분기준 - 대구
Army.Duty.total <- c(sum(Army$Seoul[1:3]), sum(Army$Busan[1:3]), sum(Army$Daegu[1:3]))
names(Army.Duty.total) <- c('Seoul', 'Busan', 'Daegu') # 지역별 현역병입영 대상자 합
names(Army.Duty.total[Army.Duty.total == max(Army.Duty.total)]) # 현역병입영 대상자가 가장 많은 지역
# 2022년 자료 기준(서울, 부산 대구)
Army <- list(Seoul = c(183, 314, 603, 850, 159, 11, 231), Busan = c(39, 80, 194, 256, 47, 3, 79), Daegu = c(37, 90, 235, 312, 65, 7, 52), total = c(0, 0, 0), class = c('현역병입영 대상', '현역병입영 대상', '현역병입역 대상', '보충역', '전시근로역', '병역면제', '재신체검사') )
Army$class <- factor(Army$class)
names(Army$Seoul) <- Army$class # 지역별 인원에 처분기준에 따른 분류 부여 - 서울
names(Army$Busan) <- Army$class # 지역별 인원에 처분기준에 따른 분류 부여 - 부산
names(Army$Daegu) <- Army$class # 지역별 인원에 처분기준에 따른 분류 부여 - 대구
Army$total <- c(sum(Army$Seoul), sum(Army$Busan), sum(Army$Daegu)) # Army에 지역별 총 인원 추가가
Army.avg <- c(mean(Army$Seoul), mean(Army$Busan), mean(Army$Daegu)) # 각 지역별 평균
Army.avg
Army.rate.Seoul <- Army$Seoul / Army$total[1] * 100 # 각 처분기준에 따른 분류의 비율 - 서울
Army.rate.Busan <- Army$Busan / Army$total[2] * 100 # 각 처분기준에 따른 분류의 비율 - 부산
Army.rate.Daegu <- Army$Daegu / Army$total[3] * 100 # 각 처분기준에 따른 분류의 비율 - 대구
Army.rate <- c(Army.rate.Seoul, Army.rate.Busan, Army.rate.Daegu)
names(Army.rate) <- c('Seoul', 'Busan', 'Daegu')
names(Army.rate.Seoul[Army.rate[1] == max(Army.rate[1])]) # 지역별 가장 높은 처분기준 - 서울
names(Army.rate.Busan[Army.rate[2] == max(Army.rate[2])]) # 지역별 가장 높은 처분기준 - 부산
names(Army.rate.Daegu[Army.rate[3] == max(Army.rate[3])]) # 지역별 가장 높은 처분기준 - 대구
Army.Duty.total <- c(sum(Army$Seoul[1:3]), sum(Army$Busan[1:3]), sum(Army$Daegu[1:3]))
names(Army.Duty.total) <- c('Seoul', 'Busan', 'Daegu') # 지역별 현역병입영 대상자 합
names(Army.Duty.total[Army.Duty.total == max(Army.Duty.total)]) # 현역병입영 대상자가 가장 많은 지역
# 2022년 자료 기준(서울, 부산 대구)
Army <- list(Seoul = c(183, 314, 603, 850, 159, 11, 231), Busan = c(39, 80, 194, 256, 47, 3, 79), Daegu = c(37, 90, 235, 312, 65, 7, 52), total = c(0, 0, 0), class = c('현역병입영 대상', '현역병입영 대상', '현역병입역 대상', '보충역', '전시근로역', '병역면제', '재신체검사') )
Army$class <- factor(Army$class)
names(Army$Seoul) <- Army$class # 지역별 인원에 처분기준에 따른 분류 부여 - 서울
names(Army$Busan) <- Army$class # 지역별 인원에 처분기준에 따른 분류 부여 - 부산
names(Army$Daegu) <- Army$class # 지역별 인원에 처분기준에 따른 분류 부여 - 대구
Army$total <- c(sum(Army$Seoul), sum(Army$Busan), sum(Army$Daegu)) # Army에 지역별 총 인원 추가가
Army.avg <- c(mean(Army$Seoul), mean(Army$Busan), mean(Army$Daegu)) # 각 지역별 평균
Army.avg
Army.rate.Seoul <- Army$Seoul / Army$total[1] * 100 # 각 처분기준에 따른 분류의 비율 - 서울
Army.rate.Busan <- Army$Busan / Army$total[2] * 100 # 각 처분기준에 따른 분류의 비율 - 부산
Army.rate.Daegu <- Army$Daegu / Army$total[3] * 100 # 각 처분기준에 따른 분류의 비율 - 대구
Army.rate <- c(Army.rate.Seoul, Army.rate.Busan, Army.rate.Daegu)
names(Army.rate) <- c('Seoul', 'Busan', 'Daegu')
names(Army.rate.Seoul[Army.rate.Seoul == max(Army.rate.Seoul)]) # 지역별 가장 높은 처분기준 - 서울
names(Army.rate.Busan[Army.rate.Busan == max(Army.rate.Busan)]) # 지역별 가장 높은 처분기준 - 부산
names(Army.rate.Daegu[Army.rate.Daegu == max(Army.rate.Daegu)]) # 지역별 가장 높은 처분기준 - 대구
Army.Duty.total <- c(sum(Army$Seoul[1:3]), sum(Army$Busan[1:3]), sum(Army$Daegu[1:3]))
names(Army.Duty.total) <- c('Seoul', 'Busan', 'Daegu') # 지역별 현역병입영 대상자 합
names(Army.Duty.total[Army.Duty.total == max(Army.Duty.total)]) # 현역병입영 대상자가 가장 많은 지역
# 2022년 자료 기준(서울, 부산 대구)
Army <- list(Seoul = c(183, 314, 603, 850, 159, 11, 231), Busan = c(39, 80, 194, 256, 47, 3, 79), Daegu = c(37, 90, 235, 312, 65, 7, 52), total = c(0, 0, 0), class = c('현역병입영 대상', '현역병입영 대상', '현역병입역 대상', '보충역', '전시근로역', '병역면제', '재신체검사') )
Army$class <- factor(Army$class)
names(Army$Seoul) <- Army$class # 지역별 인원에 처분기준에 따른 분류 부여 - 서울
names(Army$Busan) <- Army$class # 지역별 인원에 처분기준에 따른 분류 부여 - 부산
names(Army$Daegu) <- Army$class # 지역별 인원에 처분기준에 따른 분류 부여 - 대구
Army$total <- c(sum(Army$Seoul), sum(Army$Busan), sum(Army$Daegu)) # Army에 지역별 총 인원 추가가
Army.avg <- c(mean(Army$Seoul), mean(Army$Busan), mean(Army$Daegu)) # 각 지역별 평균
Army.avg
Army.rate.Seoul <- Army$Seoul / Army$total[1] * 100 # 각 처분기준에 따른 분류의 비율 - 서울
Army.rate.Busan <- Army$Busan / Army$total[2] * 100 # 각 처분기준에 따른 분류의 비율 - 부산
Army.rate.Daegu <- Army$Daegu / Army$total[3] * 100 # 각 처분기준에 따른 분류의 비율 - 대구
Army.rate <- c(Army.rate.Seoul, Army.rate.Busan, Army.rate.Daegu)
names(Army.rate) <- c('Seoul', 'Busan', 'Daegu')
names(Army.rate.Seoul[Army.rate.Seoul == max(Army.rate.Seoul)]) # 지역별 가장 높은 처분기준 - 서울
names(Army.rate.Busan[Army.rate.Busan == max(Army.rate.Busan)]) # 지역별 가장 높은 처분기준 - 부산
names(Army.rate.Daegu[Army.rate.Daegu == max(Army.rate.Daegu)]) # 지역별 가장 높은 처분기준 - 대구
names(Army.rate.Seoul[Army$Seoul == max(Army$Seoul)]) # 지역별 가장 높은 처분기준 - 서울
names(Army.rate.Busan[Army$Busan == max(Army$Busan)]) # 지역별 가장 높은 처분기준 - 부산
names(Army.rate.Daegu[Army$Daegu == max(Army$Daegu)]) # 지역별 가장 높은 처분기준 - 대구
Army.Duty.total <- c(sum(Army$Seoul[1:3]), sum(Army$Busan[1:3]), sum(Army$Daegu[1:3]))
names(Army.Duty.total) <- c('Seoul', 'Busan', 'Daegu') # 지역별 현역병입영 대상자 합
names(Army.Duty.total[Army.Duty.total == max(Army.Duty.total)]) # 현역병입영 대상자가 가장 많은 지역
burger <- matrix(c(514, 917, 11), c(533, 853, 13), c(566, 888, 10))
rownames(burger) <- c('M', 'L', 'B')
burger <- matrix(c(514, 917, 11, 533, 853, 13, 566, 888, 10), nrow=3)
rownames(burger) <- c('M', 'L', 'B')
colnames(burger) <- c('kcal', 'na', 'fat')
burger
source("~/학교/2024 1학기/확률과통계/실습.R")
burger <- matrix(c(514, 917, 11, 533, 853, 13, 566, 888, 10), byrow=3)
rownames(burger) <- c('M', 'L', 'B')
burger <- matrix(c(514, 533, 566, 917, 853, 888, 11, 13, 10), nrow=3)
rownames(burger) <- c('M', 'L', 'B')
colnames(burger) <- c('kcal', 'na', 'fat')
burger
iris
rowSums(iris[,-[4:]])
rowSums(iris[,-5])
Minju<-c(43.3,45.4,42.3,42.8,39.9,43.9,40.7,42.6,46.4,45.4,47.1,45.9)
People <- c(40.2, 38.6, 41.0, 42.5, 45.0, 42.2, 44.3, 41.5, 37.0, 37.9, 37.1, 37.0)
Justice <- c(4.0, 3.9, 3.6, 3.3, 3.3, 2.7, 2.8, 3.9, 3.7, 3.2, 3.1,3.7)
None <- c(10.9, 10.7, 11.6, 10.0, 10.1, 9.4, 10.0, 10.1, 11.3, 11.4, 11.0, 11.2)
party <-data.frame(Minju, People, Justice, None)
party
colnames(party)<-c("더불어민주당", "국민의힘", "정의당","무정당")
rownames(party) <- c('1월 3주', '1월 4주', '2월 1주', '2월 2주', '2월 3주', '2월 4주', '3월 1주', '3월 2주', '3월 3주', '3월 4주', '3월 5주', '4월 1주')
head(party)
tail(party)
mean(head(party$더불어민주당))
mean(tail(party$국민의힘))
mean.party<-c(mean(party$더불어민주당), mean(party$국민의힘),mean(party$정의당), mean(party$무정당)) # 각 정당의 기간 내 지지율 평균
mean.party
Minju.isBig <- subset(party$더불어민주당, 더불어민주당 >= mean.party[1])
Minju<-c(43.3,45.4,42.3,42.8,39.9,43.9,40.7,42.6,46.4,45.4,47.1,45.9)
People <- c(40.2, 38.6, 41.0, 42.5, 45.0, 42.2, 44.3, 41.5, 37.0, 37.9, 37.1, 37.0)
Justice <- c(4.0, 3.9, 3.6, 3.3, 3.3, 2.7, 2.8, 3.9, 3.7, 3.2, 3.1,3.7)
None <- c(10.9, 10.7, 11.6, 10.0, 10.1, 9.4, 10.0, 10.1, 11.3, 11.4, 11.0, 11.2)
party <-data.frame(Minju, People, Justice, None)
party
colnames(party)<-c("더불어민주당", "국민의힘", "정의당","무정당")
rownames(party) <- c('1월 3주', '1월 4주', '2월 1주', '2월 2주', '2월 3주', '2월 4주', '3월 1주', '3월 2주', '3월 3주', '3월 4주', '3월 5주', '4월 1주')
head(party)
tail(party)
mean(head(party$더불어민주당))
mean(tail(party$국민의힘))
mean.party<-c(mean(party$더불어민주당), mean(party$국민의힘),mean(party$정의당), mean(party$무정당)) # 각 정당의 기간 내 지지율 평균
mean.party
Minju.isBig <- which(Minju == (subset(party$더불어민주당, Minju >= mean.party[1])))
Minju.isBig
# rownames(party)
#Minju.isBig <- subset(party$더불어민주당, 더불어민주당 >= mean.party[1])
# t.party <- t(party) # party의 전치행렬
# t.party
Minju<-c(43.3,45.4,42.3,42.8,39.9,43.9,40.7,42.6,46.4,45.4,47.1,45.9)
People <- c(40.2, 38.6, 41.0, 42.5, 45.0, 42.2, 44.3, 41.5, 37.0, 37.9, 37.1, 37.0)
Justice <- c(4.0, 3.9, 3.6, 3.3, 3.3, 2.7, 2.8, 3.9, 3.7, 3.2, 3.1,3.7)
None <- c(10.9, 10.7, 11.6, 10.0, 10.1, 9.4, 10.0, 10.1, 11.3, 11.4, 11.0, 11.2)
party <-data.frame(Minju, People, Justice, None)
party
colnames(party)<-c("더불어민주당", "국민의힘", "정의당","무정당")
rownames(party) <- c('1월 3주', '1월 4주', '2월 1주', '2월 2주', '2월 3주', '2월 4주', '3월 1주', '3월 2주', '3월 3주', '3월 4주', '3월 5주', '4월 1주')
head(party)
tail(party)
mean(head(party$더불어민주당))
mean(tail(party$국민의힘))
mean.party<-c(mean(party$더불어민주당), mean(party$국민의힘),mean(party$정의당), mean(party$무정당)) # 각 정당의 기간 내 지지율 평균
mean.party
Minju.isBig <- which(Minju == (subset(party$더불어민주당, Minju >= mean.party[1])))
Minju.isBig
time(Minju.isBig)
# rownames(party)
#Minju.isBig <- subset(party$더불어민주당, 더불어민주당 >= mean.party[1])
# t.party <- t(party) # party의 전치행렬
# t.party
Minju<-c(43.3,45.4,42.3,42.8,39.9,43.9,40.7,42.6,46.4,45.4,47.1,45.9)
People <- c(40.2, 38.6, 41.0, 42.5, 45.0, 42.2, 44.3, 41.5, 37.0, 37.9, 37.1, 37.0)
Justice <- c(4.0, 3.9, 3.6, 3.3, 3.3, 2.7, 2.8, 3.9, 3.7, 3.2, 3.1,3.7)
None <- c(10.9, 10.7, 11.6, 10.0, 10.1, 9.4, 10.0, 10.1, 11.3, 11.4, 11.0, 11.2)
party <-data.frame(Minju, People, Justice, None)
party
colnames(party)<-c("더불어민주당", "국민의힘", "정의당","무정당")
rownames(party) <- c('1월 3주', '1월 4주', '2월 1주', '2월 2주', '2월 3주', '2월 4주', '3월 1주', '3월 2주', '3월 3주', '3월 4주', '3월 5주', '4월 1주')
head(party)
tail(party)
mean(head(party$더불어민주당))
mean(tail(party$국민의힘))
mean.party<-c(mean(party$더불어민주당), mean(party$국민의힘),mean(party$정의당), mean(party$무정당)) # 각 정당의 기간 내 지지율 평균
mean.party
Minju.isBig <- which(Minju == (subset(party$더불어민주당, Minju >= mean.party[1])))
Minju.isBig
time[Minju.isBig]
Minju<-c(43.3,45.4,42.3,42.8,39.9,43.9,40.7,42.6,46.4,45.4,47.1,45.9)
People <- c(40.2, 38.6, 41.0, 42.5, 45.0, 42.2, 44.3, 41.5, 37.0, 37.9, 37.1, 37.0)
Justice <- c(4.0, 3.9, 3.6, 3.3, 3.3, 2.7, 2.8, 3.9, 3.7, 3.2, 3.1,3.7)
None <- c(10.9, 10.7, 11.6, 10.0, 10.1, 9.4, 10.0, 10.1, 11.3, 11.4, 11.0, 11.2)
party <-data.frame(Minju, People, Justice, None)
party
colnames(party)<-c("더불어민주당", "국민의힘", "정의당","무정당")
rownames(party) <- c('1월 3주', '1월 4주', '2월 1주', '2월 2주', '2월 3주', '2월 4주', '3월 1주', '3월 2주', '3월 3주', '3월 4주', '3월 5주', '4월 1주')
head(party)
tail(party)
mean(head(party$더불어민주당))
mean(tail(party$국민의힘))
mean.party<-c(mean(party$더불어민주당), mean(party$국민의힘),mean(party$정의당), mean(party$무정당)) # 각 정당의 기간 내 지지율 평균
mean.party
Minju.isBig <- which(Minju == (subset(party$더불어민주당, Minju >= mean.party[1])))
Minju.isBig
time[Minju.isBig[]]
Minju<-c(43.3,45.4,42.3,42.8,39.9,43.9,40.7,42.6,46.4,45.4,47.1,45.9)
People <- c(40.2, 38.6, 41.0, 42.5, 45.0, 42.2, 44.3, 41.5, 37.0, 37.9, 37.1, 37.0)
Justice <- c(4.0, 3.9, 3.6, 3.3, 3.3, 2.7, 2.8, 3.9, 3.7, 3.2, 3.1,3.7)
None <- c(10.9, 10.7, 11.6, 10.0, 10.1, 9.4, 10.0, 10.1, 11.3, 11.4, 11.0, 11.2)
party <-data.frame(Minju, People, Justice, None)
party
colnames(party)<-c("더불어민주당", "국민의힘", "정의당","무정당")
rownames(party) <- c('1월 3주', '1월 4주', '2월 1주', '2월 2주', '2월 3주', '2월 4주', '3월 1주', '3월 2주', '3월 3주', '3월 4주', '3월 5주', '4월 1주')
head(party)
tail(party)
mean(head(party$더불어민주당))
mean(tail(party$국민의힘))
mean.party<-c(mean(party$더불어민주당), mean(party$국민의힘),mean(party$정의당), mean(party$무정당)) # 각 정당의 기간 내 지지율 평균
mean.party
Minju.isBig <- which(Minju == (subset(party$더불어민주당, Minju >= mean.party[1])))
Minju.isBig
rownames(party)[Minju.isBig]
# rownames(party)
#Minju.isBig <- subset(party$더불어민주당, 더불어민주당 >= mean.party[1])
# t.party <- t(party) # party의 전치행렬
# t.party
Minju<-c(43.3,45.4,42.3,42.8,39.9,43.9,40.7,42.6,46.4,45.4,47.1,45.9)
People <- c(40.2, 38.6, 41.0, 42.5, 45.0, 42.2, 44.3, 41.5, 37.0, 37.9, 37.1, 37.0)
Justice <- c(4.0, 3.9, 3.6, 3.3, 3.3, 2.7, 2.8, 3.9, 3.7, 3.2, 3.1,3.7)
None <- c(10.9, 10.7, 11.6, 10.0, 10.1, 9.4, 10.0, 10.1, 11.3, 11.4, 11.0, 11.2)
party <-data.frame(Minju, People, Justice, None)
party
colnames(party)<-c("더불어민주당", "국민의힘", "정의당","무정당")
rownames(party) <- c('1월 3주', '1월 4주', '2월 1주', '2월 2주', '2월 3주', '2월 4주', '3월 1주', '3월 2주', '3월 3주', '3월 4주', '3월 5주', '4월 1주')
head(party)
tail(party)
mean(head(party$더불어민주당))
mean(tail(party$국민의힘))
mean.party<-c(mean(party$더불어민주당), mean(party$국민의힘),mean(party$정의당), mean(party$무정당)) # 각 정당의 기간 내 지지율 평균
mean.party
Minju.isBig <- which(Minju == (subset(party$더불어민주당, Minju >= mean.party[1])))
Minju.isBig
rownames(party)[Minju.isBig] # 전체 기간동안의 지지율 평균 이상 주차
People.isSmall <- which(People == (subset(party$국민의힘, People >= mean.party[2])))
People.isSmall
# rownames(party)
#Minju.isBig <- subset(party$더불어민주당, 더불어민주당 >= mean.party[1])
# t.party <- t(party) # party의 전치행렬
# t.party
Minju<-c(43.3,45.4,42.3,42.8,39.9,43.9,40.7,42.6,46.4,45.4,47.1,45.9)
People <- c(40.2, 38.6, 41.0, 42.5, 45.0, 42.2, 44.3, 41.5, 37.0, 37.9, 37.1, 37.0)
Justice <- c(4.0, 3.9, 3.6, 3.3, 3.3, 2.7, 2.8, 3.9, 3.7, 3.2, 3.1,3.7)
None <- c(10.9, 10.7, 11.6, 10.0, 10.1, 9.4, 10.0, 10.1, 11.3, 11.4, 11.0, 11.2)
party <-data.frame(Minju, People, Justice, None)
party
colnames(party)<-c("더불어민주당", "국민의힘", "정의당","무정당")
rownames(party) <- c('1월 3주', '1월 4주', '2월 1주', '2월 2주', '2월 3주', '2월 4주', '3월 1주', '3월 2주', '3월 3주', '3월 4주', '3월 5주', '4월 1주')
head(party)
tail(party)
mean(head(party$더불어민주당))
mean(tail(party$국민의힘))
mean.party<-c(mean(party$더불어민주당), mean(party$국민의힘),mean(party$정의당), mean(party$무정당)) # 각 정당의 기간 내 지지율 평균
mean.party
Minju.isBig <- which(Minju == (subset(party$더불어민주당, Minju >= mean.party[1])))
Minju.isBig
rownames(party)[Minju.isBig] # 전체 기간동안의 지지율 평균 이상 주차
People.isSmall <- which(People == (subset(party$국민의힘, People <= mean.party[2])))
People.isSmall
# rownames(party)
#Minju.isBig <- subset(party$더불어민주당, 더불어민주당 >= mean.party[1])
# t.party <- t(party) # party의 전치행렬
# t.party
Minju<-c(43.3,45.4,42.3,42.8,39.9,43.9,40.7,42.6,46.4,45.4,47.1,45.9)
People <- c(40.2, 38.6, 41.0, 42.5, 45.0, 42.2, 44.3, 41.5, 37.0, 37.9, 37.1, 37.0)
Justice <- c(4.0, 3.9, 3.6, 3.3, 3.3, 2.7, 2.8, 3.9, 3.7, 3.2, 3.1,3.7)
None <- c(10.9, 10.7, 11.6, 10.0, 10.1, 9.4, 10.0, 10.1, 11.3, 11.4, 11.0, 11.2)
party <-data.frame(Minju, People, Justice, None)
party
colnames(party)<-c("더불어민주당", "국민의힘", "정의당","무정당")
rownames(party) <- c('1월 3주', '1월 4주', '2월 1주', '2월 2주', '2월 3주', '2월 4주', '3월 1주', '3월 2주', '3월 3주', '3월 4주', '3월 5주', '4월 1주')
head(party)
tail(party)
mean(head(party$더불어민주당))
mean(tail(party$국민의힘))
mean.party<-c(mean(party$더불어민주당), mean(party$국민의힘),mean(party$정의당), mean(party$무정당)) # 각 정당의 기간 내 지지율 평균
mean.party
Minju.isBig <- which(Minju == (subset(party$더불어민주당, Minju >= mean.party[1])))
Minju.isBig
rownames(party)[Minju.isBig] # 전체 기간동안의 지지율 평균 이상 주차
People.isSmall <- which(People == (subset(party$국민의힘, People <= mean.party[2])))
People.isSmall
rownames(party)[People.isSmall]
# rownames(party)
#Minju.isBig <- subset(party$더불어민주당, 더불어민주당 >= mean.party[1])
# t.party <- t(party) # party의 전치행렬
# t.party
Minju<-c(43.3,45.4,42.3,42.8,39.9,43.9,40.7,42.6,46.4,45.4,47.1,45.9)
People <- c(40.2, 38.6, 41.0, 42.5, 45.0, 42.2, 44.3, 41.5, 37.0, 37.9, 37.1, 37.0)
Justice <- c(4.0, 3.9, 3.6, 3.3, 3.3, 2.7, 2.8, 3.9, 3.7, 3.2, 3.1,3.7)
None <- c(10.9, 10.7, 11.6, 10.0, 10.1, 9.4, 10.0, 10.1, 11.3, 11.4, 11.0, 11.2)
party <-data.frame(Minju, People, Justice, None)
party
colnames(party)<-c("더불어민주당", "국민의힘", "정의당","무정당")
rownames(party) <- c('1월 3주', '1월 4주', '2월 1주', '2월 2주', '2월 3주', '2월 4주', '3월 1주', '3월 2주', '3월 3주', '3월 4주', '3월 5주', '4월 1주')
head(party)
tail(party)
is.matrix(party)
is.data.frame(party)
mean(head(party$더불어민주당))
mean(tail(party$국민의힘))
mean.party<-c(mean(party$더불어민주당), mean(party$국민의힘),mean(party$정의당), mean(party$무정당)) # 각 정당의 기간 내 지지율 평균
mean.party
Minju.isBig <- which(Minju == (subset(party$더불어민주당, Minju >= mean.party[1])))
Minju.isBig
rownames(party)[Minju.isBig] # 더불어민주당에서 전체 기간동안의 지지율 평균 이상 주차
People.isSmall <- which(People == (subset(party$국민의힘, People <= mean.party[2])))
People.isSmall
rownames(party)[People.isSmall] # 국민의힘에서 전체 기간동안의 지지율 평균 이상 주차
# rownames(party)
#Minju.isBig <- subset(party$더불어민주당, 더불어민주당 >= mean.party[1])
# t.party <- t(party) # party의 전치행렬
# t.party
Minju<-c(43.3,45.4,42.3,42.8,39.9,43.9,40.7,42.6,46.4,45.4,47.1,45.9)
People <- c(40.2, 38.6, 41.0, 42.5, 45.0, 42.2, 44.3, 41.5, 37.0, 37.9, 37.1, 37.0)
Justice <- c(4.0, 3.9, 3.6, 3.3, 3.3, 2.7, 2.8, 3.9, 3.7, 3.2, 3.1,3.7)
None <- c(10.9, 10.7, 11.6, 10.0, 10.1, 9.4, 10.0, 10.1, 11.3, 11.4, 11.0, 11.2)
party <-data.frame(Minju, People, Justice, None)
party
is.matrix(party)
is.data.frame(party)
a<-as.matrix(party)
is.matrix(a)
colnames(party)<-c("더불어민주당", "국민의힘", "정의당","무정당")
rownames(party) <- c('1월 3주', '1월 4주', '2월 1주', '2월 2주', '2월 3주', '2월 4주', '3월 1주', '3월 2주', '3월 3주', '3월 4주', '3월 5주', '4월 1주')
head(party)
tail(party)
mean(head(party$더불어민주당))
mean(tail(party$국민의힘))
mean.party<-c(mean(party$더불어민주당), mean(party$국민의힘),mean(party$정의당), mean(party$무정당)) # 각 정당의 기간 내 지지율 평균
mean.party
Minju.isBig <- which(Minju == (subset(party$더불어민주당, Minju >= mean.party[1])))
Minju.isBig
rownames(party)[Minju.isBig] # 더불어민주당에서 전체 기간동안의 지지율 평균 이상 주차
People.isSmall <- which(People == (subset(party$국민의힘, People <= mean.party[2])))
People.isSmall
rownames(party)[People.isSmall] # 국민의힘에서 전체 기간동안의 지지율 평균 이상 주차
# rownames(party)
#Minju.isBig <- subset(party$더불어민주당, 더불어민주당 >= mean.party[1])
# t.party <- t(party) # party의 전치행렬
# t.party
# 2023년 1월 3주차 ~ 4월 1주차까지의 정당 지지도 주간 변화(단위: %)
Minju<-c(43.3,45.4,42.3,42.8,39.9,43.9,40.7,42.6,46.4,45.4,47.1,45.9) # 더불어민주당 지지율
People <- c(40.2, 38.6, 41.0, 42.5, 45.0, 42.2, 44.3, 41.5, 37.0, 37.9, 37.1, 37.0) # 국민의힘 지지율
Justice <- c(4.0, 3.9, 3.6, 3.3, 3.3, 2.7, 2.8, 3.9, 3.7, 3.2, 3.1,3.7) # 정의당 지지율
None <- c(10.9, 10.7, 11.6, 10.0, 10.1, 9.4, 10.0, 10.1, 11.3, 11.4, 11.0, 11.2) # 무정당 지지율
party <-data.frame(Minju, People, Justice, None) # 네 벡터를 하나의 데이터프레임으로 합치기
party
is.matrix(party) # party가 matrix인지 검사
is.data.frame(party) # party가 dataframe인지 검사
party.matrix <-as.matrix(party) # party를 matrix로 변환하여 party.matrix 생성
is.matrix(party.matrix) # party.matrix가 matrix인지 검사
colnames(party)<-c("더불어민주당", "국민의힘", "정의당","무정당") # 열에 당 이름 붙이기기
rownames(party) <- c('1월 3주', '1월 4주', '2월 1주', '2월 2주', '2월 3주', '2월 4주', '3월 1주', '3월 2주', '3월 3주', '3월 4주', '3월 5주', '4월 1주')
# 행에 주차 이름 붙이기
head(party) # party의 앞부분 5주차 추출
tail(party) # party의 뒷부분 5주차 추출
mean(head(party$더불어민주당)) # 더불어민주당의 앞부분 5주차 평균 지지율
mean(tail(party$국민의힘)) # 국민의힘의 뒷부분 5주차 평균 지지율율
mean.party<-c(mean(party$더불어민주당), mean(party$국민의힘),mean(party$정의당), mean(party$무정당)) # 각 정당의 기간 내 지지율 평균
Minju.isBig <- which(Minju == (subset(party$더불어민주당, Minju >= mean.party[1]))) # 더불어민주당의 평균 지지율보다 높았던 주차 인덱스 추출
Minju.isBig # 더불어민주당의 평균 지지율보다 높았던 주차 추출
rownames(party)[Minju.isBig] # 더불어민주당에서 전체 기간동안의 지지율 평균 이상 주차
People.isSmall <- which(People == (subset(party$국민의힘, People <= mean.party[2]))) # 국민의힘의 평균 지지율보다 낮았던 주차 인덱스 추출
People.isSmall # 국민의힘의 평균 지지율보다 낮았던 주차 추출출
rownames(party)[People.isSmall] # 국민의힘에서 전체 기간동안의 지지율 평균 이상 주차
t.party <- t(party) # party의 전치행렬
t.party
x <- 1
y <- (x<-3)+3
x <- 1
x
y <- (x<-3)+3
x
y
testfunc <- function(x, y=4, z=3){
result <- x - y + z
return(result)
}
testfunc(x=1, y=3)
testfunc(1, 3, 2)
testfunc(1)
installed.packages('rshape2')
getwd()
library(rshape2)
intall.packages('rshape2')
intall.packages('rshape2')
install.packages('rshape2')
library(rshape2)
install.packages("reshape2")
library(reshape2)
intall.packages('reshape2')
str(tips)
levels(tips$sex)
rsf <- read.csv('이산가족교류.csv', header = T,  fileEncoding="euc-kr")
getwd()
setwd('C:\\Users\\김수빈\\zzangsbin97main\\문서\\학교\\2024 1학기\\확률과통계\\R겠습니다\\R-\\7주차')
# a reunion of separated families => rsf로 축약
rsf <- read.csv('이산가족교류.csv', header = T,  fileEncoding="euc-kr")
rsf
row.names <- c(rsf[ ,1])
col.names <- c(rsf[1, ])
row.names
col.names
rsf <- rsf[-1, -1]
rsf
rownames(rsf) <- row.names[-1]
colnames(rsf) <- col.names[-1]
for (i in 1:20) {
for (j in 1:7) {
rsf[i, j] <- as.integer(rsf[i, j])
}
}
class(rsf[4, 4])
getwd()
setwd('C:\\Users\\김수빈\\zzangsbin97main\\문서\\학교\\2024 1학기\\확률과통계\\R겠습니다\\R-\\7주차')
# a reunion of separated families => rsf로 축약
rsf <- read.csv('이산가족교류.csv', header = T,  fileEncoding="euc-kr")
rsf
row.names <- c(rsf[ ,1])
col.names <- c(rsf[1, ])
row.names
col.names
rsf <- rsf[-1, -1]
rsf
rownames(rsf) <- row.names[-1]
colnames(rsf) <- col.names[-1]
for (i in 1:20) {
for (j in 1:7) {
rsf[i, j] <- as.integer(rsf[i, j])
}
}
class(rsf[4, 4])
rsf[4, 4]+rsf[4, 5]
as.integer(rsf[4, 4])+as.integer(rsf[4, 5])
for (i in 1:20) {
for (j in 1:7) {
print(class(as.integer(rsf[i, j])))
}
}
for (i in 1:20) {
for (j in 1:7) {
rsf[i, j] <- as.integer(rsf[i, j])
}
}
class(rsf[4, 4])
for (i in 1:20) {
for (j in 1:7) {
as.integer(rsf[i, j])
}
}
class(rsf[4, 4])
rsf$생사확인 <- as.numeric(rsf$생사확인)
rsf
class(rsf[1,1])
rsf$생사확인
rsf[1]
colnames(rsf)[1]
rsf <- rsf[-1, -1]
rsf
rownames(rsf) <- row.names[-1]
rsf
rsf <- read.csv('이산가족교류.csv', header = T,  fileEncoding="euc-kr")
rsf
row.names <- c(rsf[ ,1])
col.names <- c(rsf[1, ])
row.names
col.names
rsf <- rsf[-1, -1]
rsf
rownames(rsf) <- row.names[-1]
colnames(rsf) <- col.names[-1]
rsf
for (i in 1:7) {
rsf$colnames(rsf)[i] <- as.numeric(rsf$colnames(rsf)[i])
}
rsf
colnames(rsf)[1]
for (i in 1:7) {
rsf$colnames(rsf)[i] <- as.numeric(rsf$colnames(rsf)[i])
}
rownames(rsf)[1]
names(which.max(rsf[1]))
names(which.max(as.numeric(rsf[1])))
class(colnames(rsf))
